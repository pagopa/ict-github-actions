name: Run Python script
description: "Run Python script with Pipenv managed dependencies"

inputs:
  context:
    required: false
    description: Path of the folder where the script is found
    default: '.'
  cwd:
    required: false
    description: Path of the folder where the script is executed
    default: '.'
  python-version-file:
    required: false
    description: Path of the python version file
    default: ''
  command:
    required: true
    description: Script to launch
  command-args:
    required: false
    description: Arguments of the script
    default: ''
  architecture:
    required: false
    description: Target architecture
    default: 'x64'

runs:
  using: composite

  steps:
    - name: Get Python version file
      shell: bash
      id: versfile
      env:
        PYTHON_VERSION_FILE: ${{ inputs.python-version-file }}
        CONTEXT: ${{ inputs.context }}
      run: |
        if [ -n "$PYTHON_VERSION_FILE" ]; then
          PY_VERS_FILE="$PYTHON_VERSION_FILE"
        else
          PY_VERS_FILE="$CONTEXT/.python-version"
        fi
        echo "py-vers-file=$PY_VERS_FILE" >> $GITHUB_OUTPUT

    - name: Set up Python
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
      with:
        python-version-file: ${{ steps.versfile.outputs.py-vers-file }}
        cache: 'pipenv'
        architecture: ${{ inputs.architecture }}
  
    - name: Install dependencies
      shell: bash
      working-directory: ${{ inputs.context }}
      run: |
        python -m pip install --upgrade pipenv wheel
        pipenv install --system --deploy --ignore-pipfile
  
    - name: Run Python script
      shell: bash
      env:
        CONTEXT: ${{ inputs.context }}
        COMMAND: ${{ inputs.command }}
        COMMAND_ARGS: ${{ inputs.command-args }}
        CWD: ${{ inputs.cwd }}
      run: |
        script_path=$(realpath $CONTEXT/$COMMAND)
        cd $CWD
        python $script_path $COMMAND_ARGS
