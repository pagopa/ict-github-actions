name: Terraform plan
description: "Terraform plan on Azure"

inputs:
  tenant-id:
    required: true
    description: Azure Tenant ID
  subscription-id:
    required: true
    description: Azure Subscription ID
  client-id:
    required: true
    description: Azure Client ID
  terraform-tfvars-file:
    required: true
    description: Terraform path of the tfvars to use to generate the plan
  terraform-root:
    required: false
    description: Path of the folder where the root terraform module is found
    default: .

outputs:
  plan-artifact-name:
    description: Name of the artifact in which the Terraform plan is stored
    value: ${{ steps.artifact.outputs.name }}
  plan-artifact-file:
    description: Filename of the plan in the artifact
    value: ${{ steps.artifact.outputs.filename }}
  has-changes:
    description: Whether the plan has changes to apply
    value: ${{ steps.plan.outputs.exitcode == '2' && 'true' || 'false' }}

runs:
  using: composite
  steps:
    - name: Generate plan artifact name
      id: artifact
      shell: bash
      env:
        TFPLAN_FILE: tfplan-${{ github.sha }}-${{ github.run_id }}-${{ github.run_attempt }}
      run: |
        echo "name=$TFPLAN_FILE" >> $GITHUB_OUTPUT
        echo "filename=$TFPLAN_FILE" >> $GITHUB_OUTPUT

    - name: Terraform Plan
      id: plan
      shell: bash
      working-directory: ${{ inputs.terraform-root }}
      env:
        ARM_TENANT_ID: ${{ inputs.tenant-id }}
        ARM_SUBSCRIPTION_ID: ${{ inputs.subscription-id }}
        ARM_CLIENT_ID: ${{ inputs.client-id }}
        ARM_USE_OIDC: "true"
        ARM_USE_AZUREAD: "true"
        TFVARS_FILE: ${{ inputs.terraform-tfvars-file }}
        TFPLAN_FILE: ${{ steps.artifact.outputs.filename }}
      run: |
        # don't fail because exit 2 means ok, plan has changes
        set +e
        
        terraform plan \
            -var-file="$TFVARS_FILE" \
            -lock=false \
            -out="$TFPLAN_FILE" \
            -detailed-exitcode

    - name: Check plan status
      if: steps.plan.outputs.exitcode == '1'
      shell: bash
      run: exit 1

    - name: Upload plan artifact
      uses: actions/upload-artifact@694cdabd8bdb0f10b2cea11669e1bf5453eed0a6 # v4.2.0
      if: steps.plan.outputs.exitcode == '2'
      with:
        name: ${{ steps.artifact.outputs.name }}
        path: ${{ inputs.terraform-root }}/${{ steps.artifact.outputs.filename }}
        if-no-files-found: error
        retention-days: 7
