name: Terraform plan
description: "Terraform plan on Azure"

inputs:
  tenant-id:
    required: true
    description: Azure Tenant ID
  subscription-id:
    required: true
    description: Azure Subscription ID
  client-id:
    required: true
    description: Azure Client ID
  terraform-env:
    required: true
    description: Terraform environment like in env/ folder
  terraform-root:
    required: false
    description: Path of the folder where the root terraform module is found
    default: .
  terraform-version-file:
    required: false
    description: Path of the Terraform version file
    default: .terraform-version
  azure-skip-login:
    required: false
    description: Set to 'true' to skip login, maybe because it's performed externally
    default: 'false'

outputs:
  terraform-version:
    description: Version of Terraform used
    value: ${{ steps.tf-version.outputs.terraform-version }}
  plan-artifact-name:
    description: Name of the artifact in which the Terraform plan is stored
    value: ${{ steps.artifact.outputs.name }}
  plan-artifact-file:
    description: Filename of the plan in the artifact
    value: ${{ steps.artifact.outputs.file }}

runs:
  using: composite

  steps:
    - name: Azure Login
      uses: azure/login@a65d910e8af852a8061c627c456678983e180302 # v2.2.0
      if: inputs.azure-skip-login != 'true'
      with:
        tenant-id: ${{ inputs.tenant-id }}
        subscription-id: ${{ inputs.subscription-id }}
        client-id: ${{ inputs.client-id }}

    - name: Read terraform version
      id: tf-version
      shell: bash
      run: |
        echo "terraform-version=`cat ${{ inputs.terraform-version-file }}`" >> $GITHUB_OUTPUT

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
      with:
        terraform_version: ${{ steps.tf-version.outputs.terraform-version }}

    - name: Plan
      shell: bash
      working-directory: ${{ inputs.terraform-root }}
      env:
        ARM_CLIENT_ID: ${{ inputs.client-id }}
        ARM_TENANT_ID: ${{ inputs.tenant-id }}
        ARM_SUBSCRIPTION_ID: ${{ inputs.subscription-id }}
        ARM_USE_OIDC: "true"
        ARM_USE_AZUREAD: "true"
      run: |
        ./terraform.sh plan ${{ inputs.terraform-env }} \
            -lock=false \
            -out=tfplan-${{ github.sha }} \
            -input=false \
            | grep -v "hidden-link:"

    - name: Upload plan artifact
      uses: actions/upload-artifact@694cdabd8bdb0f10b2cea11669e1bf5453eed0a6 # v4.2.0
      with:
        name: tfplan
        path: ${{ steps.directory.outputs.dir }}/tfplan-${{ github.sha }}
        if-no-files-found: error
        retention-days: 7

    - name: Plan artifact output
      id: artifact
      shell: bash
      run: |
        echo "name=tfplan" >> $GITHUB_OUTPUT
        echo "file=tfplan-${{ github.sha }} >> $GITHUB_OUTPUT


